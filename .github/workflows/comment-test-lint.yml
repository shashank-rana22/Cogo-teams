name: Test Lint

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
    inputs:
      platform:
        description: 'Platform'
        default: 'ubuntu-latest'
        required: false
        type: string

jobs:
  test-lint:

    name: Test Lint
    runs-on: ${{ inputs.platform }}
    steps:
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Npm Config
        run: npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            **/node_modules
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Installing Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Create ENV
        run: |
          touch .env
          echo NEXT_PUBLIC_REST_BASE_API_URL=${{ secrets.NEXT_PUBLIC_REST_BASE_API_URL }} >> .env

      - name: Get modified files
        id: modified-files
        run: |
          file_name=$(git diff --diff-filter=d origin/pre-release HEAD --name-only| grep -E '\.jsx$|\.js$' | tr '\n' ' ')
          echo "file_name=$file_name" >> "$GITHUB_OUTPUT"
          echo "$file_name"

      - name: Test ESLint
        env:
          file_name: ${{steps.modified-files.outputs.file_name}}
        run: pnpm run eslint_file $file_name

      - name: Test Stylelint
        if: always()
        run: pnpm run stylelint

      - name: Add workflow result as comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
