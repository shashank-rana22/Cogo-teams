name: Test Lint

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  test-lint:
    name: Test Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Npm Config
        run: npm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup Cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            **/node_modules
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Installing Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Create ENV
        run: |
          touch .env
          echo NEXT_PUBLIC_REST_BASE_API_URL=${{ secrets.NEXT_PUBLIC_REST_BASE_API_URL }} >> .env

      - name: Get PR details
        id: pr-details
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.number }}
          headers: |
            Authorization: ${{ secrets.GITHUB_TOKEN }}
            Accept: application/vnd.github.v3+json

      - name: Get changed files
        run: |
          for file in $(echo "${{ steps.pr-details.outputs.data }} | jq -r '.files[].filename'"); do
            echo "Changed file: $file"
          done
        shell: bash
        env:
          DATA: ${{ steps.pr-details.outputs.data }}
          
      - name: Test ESLint
        run: pnpm run eslint

      - name: Test Stylelint
        if: always()
        run: pnpm run stylelint
