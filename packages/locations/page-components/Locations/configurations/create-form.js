import LOCAL_LANGUAGES from './localLanguages.json';

// eslint-disable-next-line max-lines-per-function
const controls = ({ t = () => {} }) => [
	{
		name        : 'name',
		label       : t('locations:controls_name_label'),
		type        : 'text',
		placeholder : t('locations:controls_name_placeholder'),
	},
	{
		name        : 'type',
		label       : t('locations:controls_type_label'),
		type        : 'select',
		placeholder : t('locations:controls_type_placeholder'),
		options     : [
			{ label: t('locations:tabs_pincode_label'), value: 'pincode' },
			{ label: t('locations:tabs_city_label'), value: 'city' },
			{ label: t('locations:tabs_region_label'), value: 'region' },
			{ label: t('locations:tabs_seaport_label'), value: 'seaport' },
			{ label: t('locations:tabs_airport_label'), value: 'airport' },
			{ label: t('locations:tabs_cluster_label'), value: 'cluster' },
			{ label: t('locations:tabs_cfs_label'), value: 'cfs' },
			{ label: t('locations:tabs_yard_label'), value: 'yard' },
			{
				label : t('locations:tabs_warehouse_label'),
				value : 'warehouse',
			},
			{
				label : t('locations:tabs_railway_terminal_label'),
				value : 'railway_terminal',
			},
		],

		rules: { required: t('locations:controls_type_rules_required') },
	},
	{
		name        : 'status',
		label       : t('locations:controls_status_label'),
		type        : 'select',
		placeholder : t('locations:controls_status_placeholder'),
		options     : [
			{ label: t('locations:controls_status_options_active'), value: 'active' },
			{ label: t('locations:controls_status_options_inactive'), value: 'inactive' },
		],
		rules: { required: t('locations:controls_status_rules_required') },
	},
	{
		name        : 'postal_code',
		label       : t('locations:controls_postal_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_postal_code_placeholder'),
		condition   : { type: ['pincode', 'airport', 'seaport'] },

	},
	{
		name        : 'site_code',
		label       : t('locations:controls_site_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_site_code_placeholder'),
		condition   : { type: ['warehouse', 'railway_terminal'] },
	},
	{
		name        : 'address',
		label       : t('locations:controls_address_label'),
		type        : 'text',
		placeholder : t('locations:controls_address_placeholder'),
	},
	{
		name        : 'latitude',
		label       : t('locations:controls_latitude_label'),
		type        : 'number',
		placeholder : t('locations:controls_latitude_placeholder'),
		rules       : { required: t('locations:controls_latitude_rules_required') },
	},
	{
		name        : 'longitude',
		label       : t('locations:controls_longitude_label'),
		type        : 'number',
		placeholder : t('locations:controls_longitude_placeholder'),
		rules       : { required: t('locations:controls_longitude_rules_required') },
	},
	{
		name        : 'currency_code',
		label       : t('locations:controls_currency_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_currency_code_placeholder'),
		condition   : { type: ['country'] },
		rules       : { required: t('locations:controls_currency_code_rules_required') },
	},
	{
		name           : 'country_code',
		label          : t('locations:controls_mobile_country_code_label'),
		type           : 'country_select',
		optionValueKey : 'country_code',
		params         : { filters: { type: ['country'] } },
		placeholder    : t('locations:controls_mobile_country_code_placeholder'),
		rules          : { required: t('locations:controls_mobile_country_code_rules_required') },
	},
	{
		name        : 'country_id',
		label       : 'Country',
		asyncKey    : 'list_locations',
		type        : 'async_select',
		params      : { filters: { type: ['country'] } },
		placeholder : t('locations:controls_country_id_placeholder'),
		condition   : {
			type: [
				'city',
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'region',
				'yard',
				'railway_terminal',
				'warehouse',
			],
		},
		rules: { required: t('locations:controls_country_id_rules_required') },
	},
	{
		name        : 'zone_id',
		label       : t('locations:controls_zone_id_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['zone'] } },
		placeholder : t('locations:controls_zone_id_placeholder'),
	},
	{
		name        : 'region_id',
		label       : t('locations:controls_region_id_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['region'] } },
		placeholder : t('locations:controls_region_id_placeholder'),
	},
	{
		name        : 'city_id',
		label       : t('locations:controls_city_id_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['city'] } },
		placeholder : t('locations:controls_city_id_placeholder'),
		condition   : {
			type: [
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'yard',
				'warehouse',
				'railway_terminal',
			],
		},
		rules: { message: t('locations:controls_city_id_rules_required') },
	},
	{
		name           : 'district_id',
		label          : 'District',
		type           : 'async_select',
		asyncKey       : 'list_locations',
		params         : { filters: { type: ['district'] } },
		placeholder    : 'Select District',
		optionsListKey : 'locations',
		isClearable    : true,
		condition      : {
			type: [
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'yard',
				'warehouse',
				'railway_terminal',
				'subdistrict',
			],
		},
		validations: [{ type: 'required', message: 'Required' }],
	},
	{
		name           : 'sub_district_id',
		label          : 'Sub District',
		type           : 'async_select',
		asyncKey       : 'list_locations',
		params         : { filters: { type: ['subdistrict'] } },
		placeholder    : 'Select Sub District',
		optionsListKey : 'locations',
		isClearable    : true,
		condition      : {
			type: [
				'city',
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'yard',
				'warehouse',
				'railway_terminal',
			],
		},
	},
	{
		name        : 'cluster_id',
		label       : t('locations:controls_cluster_id_label'),
		placeholder : t('locations:controls_cluster_id_placeholder'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['cluster'] } },
		condition   : {
			type: ['seaport', 'airport', 'pincode', 'cfs', 'cluster', 'yard'],
		},
	},
	{
		name        : 'pincode_id',
		label       : t('locations:controls_pincode_id_label'),
		placeholder : t('locations:controls_pincode_id_placeholder'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		isClearable : true,
		params      : { filters: { type: ['pincode'] } },
		condition   : {
			type: [
				'seaport',
				'airport',
				'cfs',
				'yard',
				'railway_terminal',
				'warehouse',
			],
		},
		// rules: { required: t('locations:controls_pincode_id_rules_required') },
	},
	{
		name        : 'cfs_code',
		label       : t('locations:controls_cfs_code_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['cfs'] } },
		placeholder : t('locations:controls_cfs_code_placeholder'),
		condition   : { type: ['cfs'] },
	},
	{
		name        : 'port_code',
		label       : t('locations:controls_port_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_port_code_placeholder'),
		condition   : { type: ['seaport', 'airport'] },
	},
	{
		name        : 'inttra_code',
		label       : t('locations:controls_inttra_code_label'),
		type        : 'text',
		condition   : { type: ['seaport'] },
		placeholder : t('locations:controls_inttra_code_placeholder'),
	},
	{
		name        : 'cfs_agency_name',
		label       : t('locations:controls_cfs_agency_name_label'),
		type        : 'text',
		condition   : { type: ['cfs'] },
		placeholder : t('locations:controls_cfs_agency_name_placeholder'),
	},
	{
		name        : 'is_icd',
		label       : t('locations:controls_is_icd_label'),
		type        : 'select',
		placeholder : t('locations:controls_is_icd_placeholder'),
		condition   : { type: ['seaport'] },
	},
	{
		name           : 'local_languages',
		label          : t('locations:controls_local_languages_label'),
		multiple       : true,
		type           : 'multi_select',
		placeholder    : t('locations:controls_local_languages_placeholder'),
		optionsListKey : 'languages',
		options        : LOCAL_LANGUAGES,

	},
	{
		name          : 'aliases_attributes',
		label         : t('locations:controls_aliases_attributes_label'),
		type          : 'fieldArray',
		showButtons   : true,
		addButtonText : 'Add Aliases',
		controls      : [
			{
				name  : 'name',
				label : t('locations:controls_name_field_array_label'),
				type  : 'text',
				rules : { required: t('locations:controls_name_field_array_rules_required') },
			},
		],
	},
	{
		name            : 'flag_icon_url',
		showLabel       : false,
		label           : t('locations:controls_flag_icon_url_label'),
		span            : 12,
		type            : 'file',
		themeType       : 'secondary',
		drag            : true,
		multiple       	: false,
		onlyURLOnChange : true,
		accept          : 'image/*',
		uploadType      : 'aws',
	},
	{
		name            : 'flag_image_url',
		showLabel       : false,
		label           : t('locations:controls_flag_image_url_label'),
		span            : 12,
		type            : 'file',
		themeType       : 'secondary',
		drag            : true,
		onlyURLOnChange : true,
		accept          : 'image/*',
		uploadType      : 'aws',
	},
];

export default controls;
