const getFilterControls = ({ t = () => {} }) => [
	{
		name        : 'name',
		label       : t('locations:controls_name_label'),
		type        : 'text',
		placeholder : t('locations:controls_name_placeholder'),
		span        : 12,
	},
	{
		name        : 'status',
		label       : t('locations:controls_status_label'),
		type        : 'select',
		placeholder : t('locations:controls_status_placeholder'),
		options     : [
			{ label: t('locations:controls_status_options_active'), value: 'active' },
			{ label: t('locations:controls_status_options_inactive'), value: 'inactive' },
		],
		rules : { required: t('locations:controls_status_rules_required') },
		span  : 12,
	},
	{
		name        : 'postal_code',
		label       : t('locations:controls_postal_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_postal_code_placeholder'),
		condition   : { type: ['pincode', 'airport', 'seaport'] },
		span        : 12,

	},
	{
		name        : 'latitude',
		label       : t('locations:controls_latitude_label'),
		type        : 'number',
		placeholder : t('locations:controls_latitude_placeholder'),
		rules       : { required: t('locations:controls_latitude_rules_required') },
		span        : 12,
	},
	{
		name        : 'longitude',
		label       : t('locations:controls_longitude_label'),
		type        : 'number',
		placeholder : t('locations:controls_longitude_placeholder'),
		rules       : { required: t('locations:controls_longitude_rules_required') },
		span        : 12,
	},
	{
		name        : 'currency_code',
		label       : t('locations:controls_currency_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_currency_code_placeholder'),
		condition   : { type: ['country'] },
		rules       : { required: t('locations:controls_currency_code_rules_required') },
		span        : 12,
	},
	{
		name           : 'continent_id',
		label          : 'Continent',
		type           : 'location-select',
		placeholder    : 'Select continent',
		optionsListKey : 'locations',
		params         : { filters: { type: ['continent'] } },
		span           : 12,
	},
	{
		name           : 'trade_id',
		label          : 'Trade lane',
		type           : 'location-select',
		placeholder    : 'Select trade lane',
		optionsListKey : 'locations',
		params         : { filters: { type: ['trade'] } },
		span           : 12,
	},
	{
		name        : 'country_id',
		label       : 'Country',
		asyncKey    : 'list_locations',
		type        : 'async_select',
		params      : { filters: { type: ['country'] } },
		placeholder : t('locations:controls_country_id_placeholder'),
		condition   : {
			type: [
				'city',
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'region',
				'yard',
				'railway_terminal',
				'warehouse',
			],
		},
		rules : { required: t('locations:controls_country_id_rules_required') },
		span  : 12,
	},
	{
		name        : 'region_id',
		label       : t('locations:controls_region_id_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['region'] } },
		placeholder : t('locations:controls_region_id_placeholder'),
		span        : 12,
	},
	{
		name        : 'city_id',
		label       : t('locations:controls_city_id_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['city'] } },
		placeholder : t('locations:controls_city_id_placeholder'),
		condition   : {
			type: [
				'seaport',
				'airport',
				'pincode',
				'cfs',
				'cluster',
				'yard',
				'warehouse',
				'railway_terminal',
			],
		},
		rules : { message: t('locations:controls_city_id_rules_required') },
		span  : 12,
	},
	{
		name        : 'cluster_id',
		label       : t('locations:controls_cluster_id_label'),
		placeholder : t('locations:controls_cluster_id_placeholder'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['cluster'] } },
		condition   : {
			type: ['seaport', 'airport', 'pincode', 'cfs', 'cluster', 'yard'],

		},
		span: 12,
	},
	{
		name           : 'seaport_id',
		label          : 'Sea port',
		type           : 'location-select',
		placeholder    : 'Select seaport',
		optionsListKey : 'locations',
		params         : { filters: { type: ['seaport'] } },
		span           : 12,
	},
	{
		name           : 'airport_id',
		label          : 'Air port',
		type           : 'location-select',
		placeholder    : 'Select airport',
		optionsListKey : 'locations',
		params         : { filters: { type: ['airport'] } },
		span           : 12,
	},
	{
		name        : 'pincode_id',
		label       : t('locations:controls_pincode_id_label'),
		placeholder : t('locations:controls_pincode_id_placeholder'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['pincode'] } },
		condition   : {
			type: [
				'seaport',
				'airport',
				'cfs',
				'yard',
				'railway_terminal',
				'warehouse',
			],
		},
		rules : { required: t('locations:controls_pincode_id_rules_required') },
		span  : 12,
	},
	{
		name        : 'cfs_code',
		label       : t('locations:controls_cfs_code_label'),
		type        : 'async_select',
		asyncKey    : 'list_locations',
		params      : { filters: { type: ['cfs'] } },
		placeholder : t('locations:controls_cfs_code_placeholder'),
		condition   : { type: ['cfs'] },
		span        : 12,
	},
	{
		name        : 'port_code',
		label       : t('locations:controls_port_code_label'),
		type        : 'text',
		placeholder : t('locations:controls_port_code_placeholder'),
		condition   : { type: ['seaport', 'airport'] },
		span        : 12,
	},
	{
		name        : 'inttra_code',
		label       : t('locations:controls_inttra_code_label'),
		type        : 'text',
		condition   : { type: ['seaport'] },
		placeholder : t('locations:controls_inttra_code_placeholder'),
		span        : 12,
	},
];
export default getFilterControls;
