import { IcMLocation } from '@cogoport/icons-react';

import CustomSelectOption from '../../../common/CustomSelectOption';

const controls = ({ destination_country_id, origin_country_id }) => [
	{
		name    : 'export_transportation_pickup_type',
		label   : 'Choose Pickup type ',
		type    : 'select',
		value   : 'ltl_freight',
		options : [
			{
				label : 'FTL',
				value : 'ftl_freight',
			},
			{
				label : 'LTL',
				value : 'ltl_freight',
			},
		],
		style     : { width: 200 },
		condition : { services: ['export_transportation'] },
		rules     : { required: 'Truck type is required' },
	},
	{
		name    : 'import_transportation_pickup_type',
		label   : 'Choose Pickup type ',
		type    : 'select',
		value   : 'ltl_freight',
		options : [
			{
				label : 'FTL',
				value : 'ftl_freight',
			},
			{
				label : 'LTL',
				value : 'ltl_freight',
			},
		],
		style     : { width: 200 },
		condition : { services: ['import_transportation'] },
		rules     : { required: 'Truck type is required' },
	},
	{
		label       : 'Pickup Pincode',
		name        : 'location_id',
		placeholder : 'Search via pincode',
		type        : 'async-select',
		asyncKey    : 'list_locations',
		grouped     : ['city'],
		params      : {
			filters: {
				status     : 'active',
				type       : ['pincode'],
				country_id : [origin_country_id],
			},
		},
		style       : { width: 200 },
		condition   : { services: ['export_transportation'] },
		prefix      : <IcMLocation fontSize={16} />,
		renderLabel : (option) => <>{CustomSelectOption({ data: option, key: 'locations' })}</>,
		rules       : { required: 'Pincode is required' },
	},
	{
		label       : 'Warehouse Location',
		name        : 'location_id',
		placeholder : 'Search via warehouse',
		type        : 'async-select',
		asyncKey    : 'list_locations',
		params      : {
			filters: { type: ['warehouse'] },
		},
		defaultOptions : true,
		condition      : { services: ['warehouse'] },
		rules          : { required: 'Address is required' },
	},
	{
		name           : 'truck_type',
		label          : 'Pickup Truck Type',
		type           : 'select',
		optionsListKey : 'truck-types',
		span           : 8,
		style          : { width: 200 },
		condition      : {
			export_transportation_pickup_type : ['ftl_freight'],
			cargo_handling_type               : ['stuffing_at_dock'],
			services                          : ['export_transportation'],
		},
		rules: { required: 'Truck Type is required' },
	},
	{
		name      : 'trucks_count',
		label     : 'Trucks count',
		type      : 'number',
		span      : 4,
		style     : { width: 200 },
		condition : {
			export_transportation_pickup_type : ['ftl_freight'],
			cargo_handling_type               : ['stuffing_at_dock'],
			services                          : ['export_transportation'],
		},
		rules: { required: 'Trucks count is required', min: 0 },
	},
	{
		label       : 'Drop Pincode',
		name        : 'location_id',
		placeholder : 'Search via pincode',
		type        : 'async-select',
		caret       : true,
		span        : 12,
		style       : { width: 200 },
		asyncKey    : 'list_locations',
		params      : {
			filters: {
				status     : 'active',
				type       : ['pincode'],
				country_id : [destination_country_id],
			},
		},
		condition   : { services: ['import_transportation'] },
		prefix      : <IcMLocation fontSize={16} />,
		renderLabel : (option) => <>{CustomSelectOption({ data: option, key: 'locations' })}</>,
		rules       : { required: 'Pincode is required' },
	},
	{
		name           : 'truck_type',
		label          : 'Drop Truck Type',
		type           : 'select',
		optionsListKey : 'truck-types',
		span           : 8,
		style          : { width: 200 },
		condition      : {
			cargo_handling_type               : ['destuffing_at_dock'],
			services                          : ['import_transportation'],
			import_transportation_pickup_type : ['ftl_freight'],
		},
		rules: { required: 'Truck Type is required' },
	},
	{
		name      : 'trucks_count',
		label     : 'Trucks count',
		type      : 'number',
		span      : 4,
		value     : 1,
		style     : { width: 100 },
		condition : {
			cargo_handling_type               : ['destuffing_at_dock'],
			services                          : ['import_transportation'],
			import_transportation_pickup_type : ['ftl_freight'],
		},
		rules: { required: 'Trucks count is required', min: 0 },
	},
	{
		label       : 'Address',
		name        : 'address',
		placeholder : 'Enter Address',
		type        : 'textarea',
		style       : { width: 200 },
		condition   : { services: ['export_transportation'] },
		rules       : { required: 'Address is required' },
	},
	{
		label       : 'Address',
		name        : 'address',
		placeholder : 'Enter Address',
		style       : { width: 200 },
		type        : 'textarea',
		condition   : { services: ['import_transportation'] },
	},
	{
		label       : 'Comments to Procurement',
		name        : 'negotiation_remarks',
		placeholder : 'Type here',
		style       : { width: 200 },
		type        : 'textarea',
		condition   : {
			services: [
				'import_air_freight_local',
				'export_air_freight_local',
				'import_transportation',
				'export_transportation',
				'import_air_customs',
				'export_air_customs',
				'warehouse',
			],
		},
	},
	{
		label     : 'Expected cargo gated in',
		name      : 'expected_cargo_gated_in',
		type      : 'datepicker',
		style     : { width: 200 },
		condition : { services: ['warehouse'] },
		rules     : { required: 'Address is required' },
	},
	{
		label     : 'Expected cargo gated out',
		name      : 'expected_cargo_gated_out',
		type      : 'datepicker',
		style     : { width: 200 },
		condition : { services: ['warehouse'] },
		rules     : { required: 'Address is required' },
	},
];

export default controls;
