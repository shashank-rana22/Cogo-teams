import CATEGORY_OPTIONS from '../constants/CATEGORIES_OPTIONS.json';
import CHANNEL_OPTIONS from '../constants/CHANNEL_OPTIONS.json';

const controls = (setSegmentData) => [
	{
		name         : 'segmentation_id',
		label        : 'Segement',
		type         : 'async_select',
		asyncKey     : 'segments',
		initialCall  : true,
		placeholder  : 'Select Segment',
		rules        : { required: 'Required' },
		valueKey     : 'id',
		handleChange : (obj = []) => setSegmentData({
			segmentation_name : obj?.name,
			segmentation_id   : obj?.id,
		}),
		span           : 4,
		labelKey       : 'name',
		defaultOptions : true,
	},
	{
		name        : 'category',
		label       : 'Category',
		type        : 'select',
		placeholder : 'Select Category',
		span        : 4,
		rules       : { required: 'Required' },
		options     : CATEGORY_OPTIONS,
	},
	{
		name        : 'channel_type',
		label       : 'Channel',
		type        : 'select',
		placeholder : 'Select Channel',
		span        : 4,
		rules       : { required: 'Required' },
		options     : CHANNEL_OPTIONS,
	},
	{
		name        : 'actions',
		label       : 'Action',
		type        : 'select',
		placeholder : 'Select Action',
		span        : 3,
		rules       : { required: 'Required' },
		options     : [
			{ label: 'Stop', value: 'stop' },
			{ label: 'DND', value: 'dnd' },
		],
	},
	{
		name        : 'sub_action',
		label       : 'Sub-action',
		type        : 'select',
		placeholder : 'Select Action',
		span        : 3,
		rules       : { required: 'Required' },
		options     : [
			{ label: 'Indefinite', value: 'indefinite' },
			{ label: 'Fixed', value: 'fixed' },
		],
	},
	{
		name        : 'day',
		label       : 'Day',
		type        : 'select',
		placeholder : 'Select Day',
		span        : 3,
		rules       : { required: 'Required' },
		options     : [
			{ label: 'All Days', value: 'all' },
			{ label: 'Sunday', value: 'sunday' },
			{ label: 'Monday', value: 'monday' },
			{ label: 'Tuesday', value: 'tuesday' },
			{ label: 'Wednesday', value: 'wednesday' },
			{ label: 'Thursday', value: 'thursday' },
			{ label: 'Friday', value: 'friday' },
			{ label: 'Saturday', value: 'saturday' },
		],
	},
	{
		name  : '',
		label : '',
		span  : 6,
	},
	{
		label       : 'From',
		name        : 'validity_start',
		type        : 'datepicker',
		span        : 3,
		rules       : { required: 'From date is required' },
		placeholder : 'Select',
		minDate     : new Date(),
	},
	{
		label       : 'To',
		name        : 'validity_end',
		type        : 'datepicker',
		span        : 3,
		rules       : { required: 'To date is required' },
		placeholder : 'Select',
		minDate     : null,
	},
	{
		name  : 'day_start_time',
		label : 'FROM (HH/MM)',
		type  : 'timepicker',
		span  : 3,
		rules : { required: 'From time is required' },
	},
	{
		name  : 'day_end_time',
		label : 'TO (HH/MM)',
		type  : 'timepicker',
		span  : 3,
		rules : { required: 'To time is required' },
	},
];
export default controls;
