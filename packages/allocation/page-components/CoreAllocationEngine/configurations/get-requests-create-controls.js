const getControls = ({ t = () => {} }) => ([
	{
		name    : 'service_type',
		type    : 'radioGroup',
		label   : t('allocation:allocation_type_label'),
		value   : 'organization',
		options : [
			{
				value : 'organization',
				label : t('allocation:org_label'),
			},
			{
				value : 'partner',
				label : t('allocation:partner_label'),
			},
		],
	},
	{
		name           : 'organization_id',
		type           : 'asyncSelect',
		label          : t('allocation:org_label'),
		placeholder    : t('allocation:select_organization_placeholder'),
		defaultOptions : false,
		asyncKey       : 'organizations',
		initialCall    : false,
		isClearable	   : true,
		rules          : { required: t('allocation:organization_required') },
	},
	{
		name        : 'organization_user_id',
		type        : 'asyncSelect',
		label       : t('allocation:organization_user_label'),
		placeholder : t('allocation:organization_user_placeholder'),
		isClearable : true,
		asyncKey    : 'organization_users',
		valueKey    : 'user_id',
		initialCall : false,
		rules       : { required: t('allocation:organization_user_required') },
	},
	{
		name           : 'partner_id',
		type           : 'asyncSelect',
		label          : t('allocation:partner_label'),
		asyncKey       : 'partners',
		placeholder    : t('allocation:partner_placeholder'),
		defaultOptions : false,
		isClearable	   : true,
		initialCall    : false,
		rules          : { required: t('allocation:partner_required') },
	},
	{
		name           : 'partner_user_id',
		type           : 'asyncSelect',
		label          : t('allocation:partner_user_label'),
		asyncKey       : 'partner_users',
		valueKey       : 'user_id',
		placeholder    : t('allocation:partner_user_placeholder'),
		defaultOptions : false,
		isClearable	   : true,
		rules          : { required: t('allocation:partner_user_required') },

	},
	{
		name           : 'stakeholder_type',
		label          : t('allocation:stakeholder_type_label'),
		placeholder    : t('allocation:stakeholder_type_placeholder'),
		type           : 'select',
		isClearable    : true,
		options        : [],
		defaultOptions : true,
		rules          : { required: t('allocation:stakeholder_type_required') },
	},
	{
		name           : 'stakeholder_id',
		type           : 'asyncSelect',
		label          : t('allocation:stakeholder_label'),
		asyncKey       : 'partner_users',
		valueKey       : 'user_id',
		isClearable    : true,
		placeholder    : t('allocation:stakeholder_placeholder'),
		defaultOptions : false,
		initialCall    : false,
		params         : {
			filters: {
				status               : 'active',
				partner_entity_types : ['cogoport'],
			},
			page_limit: 100,
		},
		rules: { required: t('allocation:stakeholder_required') },
	},
	{
		name        : 'reason',
		label       : t('allocation:reason_label'),
		placeholder : t('allocation:reason_placeholder'),
		type        : 'text',
		rules       : { required: t('allocation:reason_required') },
	},
]);

export default getControls;
