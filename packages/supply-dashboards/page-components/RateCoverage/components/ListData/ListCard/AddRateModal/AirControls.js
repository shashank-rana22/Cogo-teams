// eslint-disable-next-line max-lines-per-function
const airControls = ({
	data,
	flighOperationTypeOptions,
	packagingTypeOptions,
	handlingtype,
	listPartnerUserOptions,
	rateTypeOptions,
	currencyOptions,
	priceTypeOptions,
	densityCargoOptions,
	densityRatioOptions,
	commodityOptions,
	user_id,
}) => [
	{
		name           : 'rate_type',
		label          : 'Rate type',
		placeholder    : 'Select Rate Type',
		type           : 'select',
		className      : 'primary lg',
		options        : rateTypeOptions,
		defaultOptions : true,
		isClearable    : true,
		span           : 4,
		value          : data?.rate_type,
		showForScope   : ['partner'],
		showIfMissing  : true,
		rules          : { required: 'rate type is required' },
	},
	{
		name           : 'origin_airport_id',
		label          : 'Origin Airport',
		type           : 'select',
		span           : 4,
		value          : data?.origin_airport?.id,
		disabled       : data?.origin_airport?.id,
		className      : 'primary lg',
		optionsListKey : 'locations',
		placeholder    : 'Origin Location',
		params         : { filters: { type: ['airport'] } },
		rules          : { required: 'origin airport is required' },
	},
	{
		name           : 'destination_airport_id',
		label          : 'Destination Airport',
		type           : 'select',
		span           : 4,
		value          : data?.destination_airport?.id,
		disabled       : data?.destination_airport?.id,
		className      : 'primary lg',
		optionsListKey : 'locations',
		placeholder    : 'Destination Location',
		params         : { filters: { type: ['airport'] } },
		rules          : { required: 'destination airport is required' },
	},
	{
		name           : 'service_provider_id',
		label          : 'Service Provider',
		placeholder    : 'Service Provider',
		type           : 'select',
		className      : 'primary lg',
		optionsListKey : 'verified-service-providers',
		defaultOptions : true,
		isClearable    : true,
		span           : 4,
		value          : data?.service_provider_id,
		showForScope   : ['partner'],
		showIfMissing  : true,
		rules          : { required: 'service provider is required' },
	},
	{
		name           : 'sourced_by_id',
		placeholder    : 'Rate Provided By LSP User',
		label          : 'Rate Provided By LSP User',
		type           : 'select',
		className      : 'primary lg',
		optionsListKey : 'organization-user',
		defaultOptions : true,
		isClearable    : true,
		span           : 4,
		showForScope   : ['partner'],
		valueKey       : 'user_id',
		showIfMissing  : true,
		params         : {
			filters: {},
		},
		rules: { required: 'sourced by is required' },
	},
	{
		name           : 'procured_by_id',
		placeholder    : 'Rate Procured by Cogoport Agent',
		label          : 'Rate Procured by Cogoport Agent',
		type           : 'select',
		className      : 'primary lg',
		...listPartnerUserOptions,
		value          : user_id,
		defaultOptions : true,
		isClearable    : true,
		span           : 4,
		showForScope   : ['partner'],
		valueKey       : 'user_id',
		showIfMissing  : true,
		params         : {
			filters: {},
		},
		rules: { required: 'procured by is required' },
	},
	{
		name          : 'commodity',
		label         : 'Commodity',
		type          : 'select',
		span          : 4,
		value         : data?.commodity || 'general',
		placeholder   : 'Commodity',
		options       : commodityOptions,
		className     : 'primary lg',
		commodityType : 'freight',
		rules         : { required: 'commodity is required' },
		style         : {
			menu: {
				width: '264px',
			},
		},
	},
	{
		name           : 'airline_id',
		label          : 'Airline',
		type           : 'select',
		span           : 4,
		value          : data?.airline_id,
		className      : 'primary lg',
		optionsListKey : 'operators',
		placeholder    : 'AirLine Line',
		showOptional   : false,
		rules          : { required: 'airline is required' },
	},
	{
		label         : 'Flight Operation Type',
		name          : 'flight_operation_type',
		type          : 'select',
		span          : 4,
		options       : flighOperationTypeOptions,
		showOptional  : false,
		showOnlyLabel : true,
		rules         : { required: 'flight operation type is required' },
	},
	{
		label         : 'Validity Start',
		name          : 'validity_start',
		type          : 'datepicker',
		span          : 4,
		showOptional  : false,
		showOnlyLabel : true,
		rules         : { required: 'validity is required' },
	},
	{
		label         : 'Validity End',
		name          : 'validity_end',
		type          : 'datepicker',
		span          : 4,
		showOptional  : false,
		showOnlyLabel : true,
		rules         : { required: 'validity end is required' },
	},
	{
		label         : 'Packaging Type',
		name          : 'packaging_type',
		type          : 'select',
		span          : 4,
		options       : packagingTypeOptions,
		showOptional  : false,
		showOnlyLabel : true,
		rules         : { required: 'packaging type is required' },
	},
	{
		label        : 'Handling Type',
		name         : 'handling_type',
		type         : 'select',
		span         : 4,
		options      : handlingtype,
		showOptional : false,
		rules        : { required: 'handling type is required' },
	},
	{
		label        : 'Minimum Price',
		name         : 'minimum_price',
		span         : 4,
		type         : 'input',
		showOptional : false,
		rules        : { required: 'min price is required' },
	},
	{
		label        : 'Currency',
		name         : 'currency',
		span         : 4,
		options      : currencyOptions,
		type         : 'select',
		showOptional : false,
		rules        : { required: 'currency is required' },
	},
	{
		label        : 'Price Type',
		name         : 'price_type',
		span         : 4,
		options      : priceTypeOptions,
		type         : 'select',
		showOptional : false,
		rules        : { required: 'price type is required' },
	},
	{
		label        : 'Density Cargo',
		name         : 'density_cargo',
		span         : 4,
		value        : 'high_density',
		disabled     : true,
		options      : densityCargoOptions,
		type         : 'select',
		showOptional : false,
		rules        : { required: 'density cargo is required' },
	},
	{
		label        : 'Density Ratio',
		name         : 'density_ratio',
		value        : '1_500',
		disabled     : true,
		span         : 4,
		options      : densityRatioOptions,
		type         : 'select',
		showOptional : false,
		placeholder  : 'Density Ratio',
		rules        : { required: 'density ratio is required' },
	},
	{
		name               : 'weight_slabs',
		type               : 'fieldArray',
		showButtons        : true,
		buttonText         : 'Add weight Slabs',
		noDeleteButtonTill : 0,
		controls           : [
			{
				name         : 'lower_limit',
				type         : 'number',
				placeholder  : 'Lower Limit',
				span         : 3,
				showOptional : false,
				className    : 'primary lg',
			},
			{
				name         : 'upper_limit',
				type         : 'number',
				span         : 3,
				placeholder  : 'Upper Limit',
				showOptional : false,
				className    : 'primary lg',
			},
			{
				name         : 'price_per_unit',
				type         : 'number',
				placeholder  : 'Price Per Unit',
				span         : 2,
				showOptional : false,
				className    : 'primary lg',
			},
		],
	},
];
export default airControls;
